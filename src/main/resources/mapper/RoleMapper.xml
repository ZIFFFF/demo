<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.Role">
    <!--@mbg.generated-->
    <!--@Table `role`-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="creator" jdbcType="INTEGER" property="creator" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="modifier" jdbcType="INTEGER" property="modifier" />
    <result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `role`, `desc`, creator, created_time, modifier, modified_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from `role`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from `role`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.demo.model.Role" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `role` (`role`, `desc`, creator, 
      created_time, modifier, modified_time
      )
    values (#{role,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, #{creator,jdbcType=INTEGER}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{modifier,jdbcType=INTEGER}, #{modifiedTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.demo.model.Role" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `role`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="role != null">
        `role`,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="modifiedTime != null">
        modified_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=INTEGER},
      </if>
      <if test="modifiedTime != null">
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Role">
    <!--@mbg.generated-->
    update `role`
    <set>
      <if test="role != null">
        `role` = #{role,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=INTEGER},
      </if>
      <if test="modifiedTime != null">
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Role">
    <!--@mbg.generated-->
    update `role`
    set `role` = #{role,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=INTEGER},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>